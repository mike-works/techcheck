{"version":3,"file":"index.js","sources":["../src/enums/platform.ts","../node_modules/semver/semver.js","../src/extractor/base.ts","../src/checker.ts","../src/utils/run-command.ts","../src/extractor/executable.ts","../src/evaluator.ts","../src/index.ts"],"sourcesContent":["import { platform as nodePlatform } from 'os';\n\nexport enum Platform {\n  Win32,\n  Posix,\n  Unsupported\n}\n\nexport const POSIX_PLATFORMS: NodeJS.Platform[] = [\n  'aix',\n  'darwin',\n  'freebsd',\n  'linux',\n  'openbsd',\n  'cygwin'\n];\n\nexport type SupportedPlatform = Platform.Posix | Platform.Win32;\n\nexport function isPlatform(platform: Platform): boolean {\n  return getPlatform() === platform;\n}\n\nexport function platformFor(platform: NodeJS.Platform): Platform {\n  if (platform === 'win32') {\n    return Platform.Win32;\n  }\n  if (POSIX_PLATFORMS.indexOf(platform) >= 0) {\n    return Platform.Posix;\n  }\n  return Platform.Unsupported;\n}\n\nexport function getPlatform(): Platform {\n  let p = nodePlatform();\n  return platformFor(p);\n}\n\nexport default Platform;\n","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  debug('SemVer', version, loose);\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.loose, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  debug('comparator', comp, loose);\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\nComparator.prototype.intersects = function(comp, loose) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, loose);\n    return satisfies(this.value, rangeTmp, loose);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, loose);\n    return satisfies(comp.semver, rangeTmp, loose);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, loose) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, loose) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if (range instanceof Range) {\n    if (range.loose === loose) {\n      return range;\n    } else {\n      return new Range(range.raw, loose);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, loose);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  debug('range', range, loose);\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, loose) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, loose);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  debug('comp', comp);\n  comp = replaceCarets(comp, loose);\n  debug('caret', comp);\n  comp = replaceTildes(comp, loose);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, loose);\n  debug('xrange', comp);\n  comp = replaceStars(comp, loose);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  debug('caret', comp, loose);\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  debug('replaceXRanges', comp, loose);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  debug('replaceStars', comp, loose);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, loose);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, loose) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, loose);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, loose)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, loose);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, loose) {\n  var parsed = parse(version, loose);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, loose) {\n  r1 = new Range(r1, loose)\n  r2 = new Range(r2, loose)\n  return r1.intersects(r2)\n}\n","import { Platform, SupportedPlatform } from '../enums/platform';\nimport Environment from '../environment';\n\nexport type ExtractorValue = {\n  _brand: '__from_extractor';\n  val: string;\n};\n\nexport interface BaseExtractorOptions {\n  name: string;\n  platforms: SupportedPlatform[];\n}\n\nexport abstract class BaseExtractor<Opts = {}> {\n  public readonly platforms: SupportedPlatform[];\n  public readonly name: string;\n  public handlesPlatform(platform: Platform) {\n    return (this.platforms as Platform[]).indexOf(platform) >= 0;\n  }\n  public async getInfo(env: Environment, opts?: Opts): Promise<ExtractorValue> {\n    if (!this.handlesPlatform(env.platform))\n      throw new Error(\n        `Extractor ${this.name} does not support ${Platform[env.platform]}`\n      );\n    return this.getInfoForEnvironment(env, opts);\n  }\n  protected abstract async getInfoForEnvironment(\n    env: Environment,\n    opts?: Opts\n  ): Promise<ExtractorValue>;\n  constructor({ name, platforms }: BaseExtractorOptions) {\n    this.platforms = platforms;\n    this.name = name;\n  }\n  protected static brandStamp: '__from_extractor';\n  public static unbrand(v: ExtractorValue): string {\n    return v.val;\n  }\n  public static brand(s: string): ExtractorValue {\n    return {\n      val: s,\n      _brand: BaseExtractor.brandStamp\n    };\n  }\n}\n\nexport default BaseExtractor;\n","import * as semver from 'semver';\nimport { ExtractorValue, BaseExtractor } from './extractor/base';\n\nexport type ValueFormatter = RegExp | ((raw: string) => string);\nexport type SemVerMatcher = { range?: string; min?: string; max?: string };\n\nexport type ValueMatcher =\n  | RegExp\n  | string\n  | { semver: SemVerMatcher }\n  | ((raw: string) => boolean);\n\nexport interface BaseCheckerOptions {\n  preprocessor?: ValueFormatter;\n  matcher: ValueMatcher;\n  name: string;\n}\n\nfunction normalizeExtractorValue(\n  v: ExtractorValue,\n  adj: ValueFormatter\n): string {\n  if (adj instanceof RegExp) {\n    let parts = adj.exec(BaseExtractor.unbrand(v));\n    if (parts === null || parts.length === 0)\n      throw new Error(`Could not normalize value ${v} with ${adj}`);\n    return parts[0];\n  }\n  return adj(BaseExtractor.unbrand(v));\n}\n\nfunction doesSemverMatch(version: string, m: SemVerMatcher): boolean {\n  let { range, min, max } = m;\n  if (typeof range !== 'undefined') {\n    return semver.satisfies(version, range);\n  }\n  if (typeof max !== 'undefined') {\n    if (typeof min !== 'undefined') {\n      return semver.gte(version, min) && semver.lte(version, max);\n    }\n    return semver.lte(version, max);\n  }\n  if (typeof min !== 'undefined') {\n    return semver.gte(version, min);\n  }\n  throw new Error(`Invalid SemVerMatcher object ${JSON.stringify(m)}`);\n}\n\nfunction doesMatch(v: ExtractorValue | string, m: ValueMatcher): boolean {\n  let val = typeof v === 'string' ? v : BaseExtractor.unbrand(v);\n  if (m instanceof RegExp) {\n    return m.test(val);\n  }\n  if (typeof m === 'string') {\n    return m === val;\n  }\n  if (m instanceof Function) {\n    return m(val);\n  }\n  return doesSemverMatch(val, m.semver);\n}\n\nfunction validateOptions(opts: BaseCheckerOptions) {\n  if (\n    !(opts.matcher instanceof RegExp) &&\n    !(opts.matcher instanceof Function) &&\n    typeof opts.matcher !== 'string'\n  ) {\n    opts.matcher.semver;\n  }\n}\n\nexport class BaseChecker {\n  protected preprocessor?: ValueFormatter;\n  protected matcher?: ValueMatcher;\n  public readonly name: string;\n  constructor(opts: BaseCheckerOptions) {\n    validateOptions(opts);\n    this.preprocessor = opts.preprocessor;\n    this.matcher = opts.matcher;\n    this.name = opts.name;\n  }\n  public async isOk(v: ExtractorValue): Promise<boolean> {\n    let normalized =\n      typeof this.preprocessor !== 'undefined'\n        ? normalizeExtractorValue(v, this.preprocessor)\n        : v;\n    if (typeof this.matcher === 'undefined')\n      throw new Error(`Checker ${this.name} does not have a matcher`);\n    let matches = doesMatch(normalized, this.matcher);\n    return matches;\n  }\n}\n\nexport default BaseChecker;\n","import { exec } from 'child_process';\n\n/**\n * Execute a shell/bash command\n * @param command command to run\n * @return result of command\n */\nexport function runCommand(command: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    exec(command, (err, stdout, stderr) => {\n      if (err !== null) reject(new Error(stderr));\n      else resolve(stdout);\n    });\n  });\n}\n","import BaseExtractor, { BaseExtractorOptions, ExtractorValue } from './base';\nimport Environment from '../environment';\nimport { runCommand } from '../utils/run-command';\nimport { Platform } from '../enums/platform';\n\nexport interface ExecutableExtractorOptions extends BaseExtractorOptions {\n  command: string;\n}\n\nexport class ExecutableExtractor extends BaseExtractor {\n  private readonly command: string;\n  public async getInfoForEnvironment(): Promise<ExtractorValue> {\n    return {\n      val: (await runCommand(this.command)).trim(),\n      _brand: BaseExtractor.brandStamp\n    };\n  }\n  constructor({ name, platforms, command }: ExecutableExtractorOptions) {\n    super({ name, platforms });\n    this.command = command;\n  }\n}\n\nexport default ExecutableExtractor;\n","import Platform from './enums/platform';\nimport Checker from './checker';\nimport ExecutableExtractor from './extractor/executable';\nimport BaseExtractor from './extractor/base';\n\nexport interface EvaluatorOptions {}\n\nexport enum EvaluatorStatus {\n  Ok,\n  Warning,\n  Error,\n  Fail\n}\n\nexport interface EvaluatorResult {\n  status: EvaluatorStatus;\n}\n\nexport class Evaluator {\n  constructor(opts: EvaluatorOptions) {}\n  public async evaluate(): Promise<EvaluatorResult> {\n    let c = new Checker({\n      name: 'try',\n      matcher: { semver: { range: '>= 1.0.0' } }\n    });\n\n    let e = new ExecutableExtractor({\n      name: 'openssl',\n      command: 'openssl version',\n      platforms: [Platform.Win32, Platform.Posix]\n    });\n\n    let result = c.isOk(BaseExtractor.brand('1.9.1'));\n    if (result) {\n      return { status: EvaluatorStatus.Ok };\n    }\n    return { status: EvaluatorStatus.Error };\n  }\n}\n\nexport default Evaluator;\n","import Checker from './checker';\nimport Evaluator from './evaluator';\n\n(async function() {\n  let e = new Evaluator({});\n\n  await e.evaluate();\n})();\n"],"names":["platform","semver.satisfies","semver.gte","semver.lte","exec","Checker","Platform"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAY,QAIX;AAJD,WAAY,QAAQ;IAClB,yCAAK,CAAA;IACL,yCAAK,CAAA;IACL,qDAAW,CAAA;CACZ,EAJW,QAAQ,KAAR,QAAQ,QAInB;AAED,AAOE;AAIF,AAEC;AAED,AAQC;AAED,AAGC;AAED,iBAAe,QAAQ,CAAC;;;;;;;ACtCxB,OAAO,GAAG,cAAc,GAAG,MAAM,CAAC;;;YAGtB,IAAI,KAAK,CAAC;YACV,IAAI,OAAO,OAAO,KAAK,QAAQ;gBAC3B,OAAO,CAAC,GAAG;gBACX,OAAO,CAAC,GAAG,CAAC,UAAU;gBACtB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;cAC5C,KAAK,GAAG,WAAW;gBACjB,IAAI,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACpD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBAChC,CAAC;;cAEJ,KAAK,GAAG,WAAW,EAAE,CAAC;;;;AAIpC,2BAA2B,GAAG,OAAO,CAAC;;AAEtC,IAAI,UAAU,GAAG,GAAG,CAAC;AACrB,IAAI,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,IAAI,gBAAgB,CAAC;;;AAGnE,IAAI,EAAE,GAAG,UAAU,GAAG,EAAE,CAAC;AACzB,IAAI,GAAG,GAAG,WAAW,GAAG,EAAE,CAAC;AAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;;;;;;;;AAQV,IAAI,iBAAiB,GAAG,CAAC,EAAE,CAAC;AAC5B,GAAG,CAAC,iBAAiB,CAAC,GAAG,aAAa,CAAC;AACvC,IAAI,sBAAsB,GAAG,CAAC,EAAE,CAAC;AACjC,GAAG,CAAC,sBAAsB,CAAC,GAAG,QAAQ,CAAC;;;;;;;AAOvC,IAAI,oBAAoB,GAAG,CAAC,EAAE,CAAC;AAC/B,GAAG,CAAC,oBAAoB,CAAC,GAAG,4BAA4B,CAAC;;;;;;AAMzD,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;AACtB,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,iBAAiB,CAAC,GAAG,MAAM;mBACrC,GAAG,GAAG,GAAG,CAAC,iBAAiB,CAAC,GAAG,MAAM;mBACrC,GAAG,GAAG,GAAG,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC;;AAEtD,IAAI,gBAAgB,GAAG,CAAC,EAAE,CAAC;AAC3B,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,sBAAsB,CAAC,GAAG,MAAM;wBAC1C,GAAG,GAAG,GAAG,CAAC,sBAAsB,CAAC,GAAG,MAAM;wBAC1C,GAAG,GAAG,GAAG,CAAC,sBAAsB,CAAC,GAAG,GAAG,CAAC;;;;;AAKhE,IAAI,oBAAoB,GAAG,CAAC,EAAE,CAAC;AAC/B,GAAG,CAAC,oBAAoB,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC;4BAC9B,GAAG,GAAG,GAAG,CAAC,oBAAoB,CAAC,GAAG,GAAG,CAAC;;AAElE,IAAI,yBAAyB,GAAG,CAAC,EAAE,CAAC;AACpC,GAAG,CAAC,yBAAyB,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,sBAAsB,CAAC;iCACnC,GAAG,GAAG,GAAG,CAAC,oBAAoB,CAAC,GAAG,GAAG,CAAC;;;;;;;AAOvE,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;AACrB,GAAG,CAAC,UAAU,CAAC,GAAG,OAAO,GAAG,GAAG,CAAC,oBAAoB,CAAC;kBACnC,QAAQ,GAAG,GAAG,CAAC,oBAAoB,CAAC,GAAG,MAAM,CAAC;;AAEhE,IAAI,eAAe,GAAG,CAAC,EAAE,CAAC;AAC1B,GAAG,CAAC,eAAe,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,yBAAyB,CAAC;uBACzC,QAAQ,GAAG,GAAG,CAAC,yBAAyB,CAAC,GAAG,MAAM,CAAC;;;;;AAK1E,IAAI,eAAe,GAAG,CAAC,EAAE,CAAC;AAC1B,GAAG,CAAC,eAAe,CAAC,GAAG,eAAe,CAAC;;;;;;AAMvC,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;AAChB,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC;aAChC,QAAQ,GAAG,GAAG,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC;;;;;;;;;;;;AAYtD,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC;AACf,IAAI,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC,WAAW,CAAC;gBACvB,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG;gBACrB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;;AAEjC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,CAAC;;;;;AAKlC,IAAI,UAAU,GAAG,UAAU,GAAG,GAAG,CAAC,gBAAgB,CAAC;iBAClC,GAAG,CAAC,eAAe,CAAC,GAAG,GAAG;iBAC1B,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;;AAElC,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;AAChB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,CAAC;;AAEpC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC;AACf,GAAG,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;;;;;AAK3B,IAAI,qBAAqB,GAAG,CAAC,EAAE,CAAC;AAChC,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC,sBAAsB,CAAC,GAAG,UAAU,CAAC;AACtE,IAAI,gBAAgB,GAAG,CAAC,EAAE,CAAC;AAC3B,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC,iBAAiB,CAAC,GAAG,UAAU,CAAC;;AAE5D,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;AACtB,GAAG,CAAC,WAAW,CAAC,GAAG,WAAW,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG;mBACzC,SAAS,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG;mBACvC,SAAS,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG;mBACvC,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI;mBAC9B,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG;mBAChB,MAAM,CAAC;;AAE1B,IAAI,gBAAgB,GAAG,CAAC,EAAE,CAAC;AAC3B,GAAG,CAAC,gBAAgB,CAAC,GAAG,WAAW,GAAG,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;wBAC9C,SAAS,GAAG,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;wBAC5C,SAAS,GAAG,GAAG,CAAC,qBAAqB,CAAC,GAAG,GAAG;wBAC5C,KAAK,GAAG,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI;wBACnC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG;wBAChB,MAAM,CAAC;;AAE/B,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;AACjB,GAAG,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;AAChE,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;AACtB,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC;;;;AAI1E,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;AACpB,GAAG,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;;AAE3B,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;AACpB,GAAG,CAAC,SAAS,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;AACpD,EAAE,CAAC,SAAS,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;AAChD,IAAI,gBAAgB,GAAG,KAAK,CAAC;;AAE7B,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;AAChB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;AAC3D,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;AACrB,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC;;;;AAIrE,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;AACpB,GAAG,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;;AAE3B,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;AACpB,GAAG,CAAC,SAAS,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC;AACpD,EAAE,CAAC,SAAS,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;AAChD,IAAI,gBAAgB,GAAG,KAAK,CAAC;;AAE7B,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC;AAChB,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;AAC3D,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;AACrB,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC;;;AAGrE,IAAI,eAAe,GAAG,CAAC,EAAE,CAAC;AAC1B,GAAG,CAAC,eAAe,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,OAAO,GAAG,UAAU,GAAG,OAAO,CAAC;AACxE,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;AACrB,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,OAAO,GAAG,SAAS,GAAG,OAAO,CAAC;;;;;AAKlE,IAAI,cAAc,GAAG,CAAC,EAAE,CAAC;AACzB,GAAG,CAAC,cAAc,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;sBACpB,OAAO,GAAG,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG,CAAC;;;AAG1E,EAAE,CAAC,cAAc,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,GAAG,CAAC,CAAC;AAC1D,IAAI,qBAAqB,GAAG,QAAQ,CAAC;;;;;;;AAOrC,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;AACtB,GAAG,CAAC,WAAW,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG;mBACjC,WAAW;mBACX,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,GAAG,GAAG;mBAC5B,OAAO,CAAC;;AAE3B,IAAI,gBAAgB,GAAG,CAAC,EAAE,CAAC;AAC3B,GAAG,CAAC,gBAAgB,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG;wBACtC,WAAW;wBACX,GAAG,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,GAAG;wBACjC,OAAO,CAAC;;;AAGhC,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC;AACf,GAAG,CAAC,IAAI,CAAC,GAAG,iBAAiB,CAAC;;;;AAI9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;EAC1B,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CAC9B;;AAED,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE;EAC7B,IAAI,OAAO,YAAY,MAAM;IAC3B,OAAO,OAAO,CAAC;;EAEjB,IAAI,OAAO,OAAO,KAAK,QAAQ;IAC7B,OAAO,IAAI,CAAC;;EAEd,IAAI,OAAO,CAAC,MAAM,GAAG,UAAU;IAC7B,OAAO,IAAI,CAAC;;EAEd,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;EACrC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;IAClB,OAAO,IAAI,CAAC;;EAEd,IAAI;IACF,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;GACnC,CAAC,OAAO,EAAE,EAAE;IACX,OAAO,IAAI,CAAC;GACb;CACF;;AAED,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE;EAC7B,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAC9B,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;CAC7B;;;AAGD,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE;EAC7B,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;EAC3D,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;CAC7B;;AAED,cAAc,GAAG,MAAM,CAAC;;AAExB,SAAS,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE;EAC9B,IAAI,OAAO,YAAY,MAAM,EAAE;IAC7B,IAAI,OAAO,CAAC,KAAK,KAAK,KAAK;MACzB,OAAO,OAAO,CAAC;;MAEf,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;GAC7B,MAAM,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;IACtC,MAAM,IAAI,SAAS,CAAC,mBAAmB,GAAG,OAAO,CAAC,CAAC;GACpD;;EAED,IAAI,OAAO,CAAC,MAAM,GAAG,UAAU;IAC7B,MAAM,IAAI,SAAS,CAAC,yBAAyB,GAAG,UAAU,GAAG,aAAa,CAAC;;EAE7E,IAAI,EAAE,IAAI,YAAY,MAAM,CAAC;IAC3B,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;;EAEpC,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;EACnB,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE3D,IAAI,CAAC,CAAC;IACJ,MAAM,IAAI,SAAS,CAAC,mBAAmB,GAAG,OAAO,CAAC,CAAC;;EAErD,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC;;;EAGnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEnB,IAAI,IAAI,CAAC,KAAK,GAAG,gBAAgB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;IACjD,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC;;EAE9C,IAAI,IAAI,CAAC,KAAK,GAAG,gBAAgB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;IACjD,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC;;EAE9C,IAAI,IAAI,CAAC,KAAK,GAAG,gBAAgB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC;IACjD,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC;;;EAG9C,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;;IAErB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE;MACjD,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;QACvB,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;QACd,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,gBAAgB;UACpC,OAAO,GAAG,CAAC;OACd;MACD,OAAO,EAAE,CAAC;KACX,CAAC,CAAC;;EAEL,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;EACzC,IAAI,CAAC,MAAM,EAAE,CAAC;CACf;;AAED,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;EACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;EAChE,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM;IACxB,IAAI,CAAC,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;EAClD,OAAO,IAAI,CAAC,OAAO,CAAC;CACrB,CAAC;;AAEF,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;EACrC,OAAO,IAAI,CAAC,OAAO,CAAC;CACrB,CAAC;;AAEF,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,KAAK,EAAE;EACzC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EACzD,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC;IAC5B,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;EAExC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;CAC1D,CAAC;;AAEF,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,KAAK,EAAE;EAC7C,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC;IAC5B,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;EAExC,OAAO,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC;SAC3C,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC;SAC3C,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;CACpD,CAAC;;AAEF,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,KAAK,EAAE;EAC5C,IAAI,EAAE,KAAK,YAAY,MAAM,CAAC;IAC5B,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;;EAGxC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM;IACpD,OAAO,CAAC,CAAC,CAAC;OACP,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM;IACzD,OAAO,CAAC,CAAC;OACN,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM;IAC1D,OAAO,CAAC,CAAC;;EAEX,IAAI,CAAC,GAAG,CAAC,CAAC;EACV,GAAG;IACD,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5B,KAAK,CAAC,oBAAoB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,SAAS;MACpC,OAAO,CAAC,CAAC;SACN,IAAI,CAAC,KAAK,SAAS;MACtB,OAAO,CAAC,CAAC;SACN,IAAI,CAAC,KAAK,SAAS;MACtB,OAAO,CAAC,CAAC,CAAC;SACP,IAAI,CAAC,KAAK,CAAC;MACd,SAAS;;MAET,OAAO,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GACnC,QAAQ,EAAE,CAAC,EAAE;CACf,CAAC;;;;AAIF,MAAM,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,OAAO,EAAE,UAAU,EAAE;EACnD,QAAQ,OAAO;IACb,KAAK,UAAU;MACb,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;MAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAAC,KAAK,EAAE,CAAC;MACb,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;MAC5B,MAAM;IACR,KAAK,UAAU;MACb,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;MAC3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAAC,KAAK,EAAE,CAAC;MACb,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;MAC5B,MAAM;IACR,KAAK,UAAU;;;;MAIb,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;MAC3B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;MAC9B,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;MAC5B,MAAM;;;IAGR,KAAK,YAAY;MACf,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;MAChC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;MAC5B,MAAM;;IAER,KAAK,OAAO;;;;;MAKV,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;QACtE,IAAI,CAAC,KAAK,EAAE,CAAC;MACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;MACrB,MAAM;IACR,KAAK,OAAO;;;;;MAKV,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;QAClD,IAAI,CAAC,KAAK,EAAE,CAAC;MACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;MACf,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;MACrB,MAAM;IACR,KAAK,OAAO;;;;;MAKV,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;MACf,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;MACrB,MAAM;;;IAGR,KAAK,KAAK;MACR,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;WACnB;QACH,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QAC/B,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;UACf,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YAC1C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC;YACrB,CAAC,GAAG,CAAC,CAAC,CAAC;WACR;SACF;QACD,IAAI,CAAC,KAAK,CAAC,CAAC;UACV,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAC3B;MACD,IAAI,UAAU,EAAE;;;QAGd,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;UACrC,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SACrC;UACC,IAAI,CAAC,UAAU,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;OACrC;MACD,MAAM;;IAER;MACE,MAAM,IAAI,KAAK,CAAC,8BAA8B,GAAG,OAAO,CAAC,CAAC;GAC7D;EACD,IAAI,CAAC,MAAM,EAAE,CAAC;EACd,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC;EACxB,OAAO,IAAI,CAAC;CACb,CAAC;;AAEF,WAAW,GAAG,GAAG,CAAC;AAClB,SAAS,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE;EAChD,IAAI,OAAO,KAAK,CAAC,KAAK,QAAQ,EAAE;IAC9B,UAAU,GAAG,KAAK,CAAC;IACnB,KAAK,GAAG,SAAS,CAAC;GACnB;;EAED,IAAI;IACF,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC;GACpE,CAAC,OAAO,EAAE,EAAE;IACX,OAAO,IAAI,CAAC;GACb;CACF;;AAED,YAAY,GAAG,IAAI,CAAC;AACpB,SAAS,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE;EAChC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE;IAC1B,OAAO,IAAI,CAAC;GACb,MAAM;IACL,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IACzB,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IACzB,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE;MAChD,KAAK,IAAI,GAAG,IAAI,EAAE,EAAE;QAClB,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,OAAO,EAAE;UACzD,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE;YACvB,OAAO,KAAK,CAAC,GAAG,CAAC;WAClB;SACF;OACF;MACD,OAAO,YAAY,CAAC;KACrB;IACD,KAAK,IAAI,GAAG,IAAI,EAAE,EAAE;MAClB,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,OAAO,EAAE;QACzD,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE;UACvB,OAAO,GAAG,CAAC;SACZ;OACF;KACF;GACF;CACF;;AAED,0BAA0B,GAAG,kBAAkB,CAAC;;AAEhD,IAAI,OAAO,GAAG,UAAU,CAAC;AACzB,SAAS,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE;EAChC,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE3B,IAAI,IAAI,IAAI,IAAI,EAAE;IAChB,CAAC,GAAG,CAAC,CAAC,CAAC;IACP,CAAC,GAAG,CAAC,CAAC,CAAC;GACR;;EAED,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;SACpB,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;SACnB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACV,CAAC,GAAG,CAAC,GAAG,CAAC;SACT,CAAC,CAAC;CACV;;AAED,2BAA2B,GAAG,mBAAmB,CAAC;AAClD,SAAS,mBAAmB,CAAC,CAAC,EAAE,CAAC,EAAE;EACjC,OAAO,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACjC;;AAED,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;EACvB,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;CACnC;;AAED,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;EACvB,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;CACnC;;AAED,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;EACvB,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC;CACnC;;AAED,eAAe,GAAG,OAAO,CAAC;AAC1B,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EAC5B,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;CAC3D;;AAED,oBAAoB,GAAG,YAAY,CAAC;AACpC,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;EAC1B,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;CAC5B;;AAED,gBAAgB,GAAG,QAAQ,CAAC;AAC5B,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EAC7B,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;CAC7B;;AAED,YAAY,GAAG,IAAI,CAAC;AACpB,SAAS,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE;EACzB,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;IAC9B,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;GACrC,CAAC,CAAC;CACJ;;AAED,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE;EAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;IAC9B,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;GACtC,CAAC,CAAC;CACJ;;AAED,UAAU,GAAG,EAAE,CAAC;AAChB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EACvB,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;CACjC;;AAED,UAAU,GAAG,EAAE,CAAC;AAChB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EACvB,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;CACjC;;AAED,UAAU,GAAG,EAAE,CAAC;AAChB,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EACvB,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;CACnC;;AAED,WAAW,GAAG,GAAG,CAAC;AAClB,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EACxB,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;CACnC;;AAED,WAAW,GAAG,GAAG,CAAC;AAClB,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EACxB,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;CAClC;;AAED,WAAW,GAAG,GAAG,CAAC;AAClB,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;EACxB,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;CAClC;;AAED,WAAW,GAAG,GAAG,CAAC;AAClB,SAAS,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE;EAC5B,IAAI,GAAG,CAAC;EACR,QAAQ,EAAE;IACR,KAAK,KAAK;MACR,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;MACzC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;MACzC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;MACd,MAAM;IACR,KAAK,KAAK;MACR,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;MACzC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;MACzC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;MACd,MAAM;IACR,KAAK,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM;IAC3D,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM;IACzC,KAAK,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM;IACvC,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM;IACzC,KAAK,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM;IACvC,KAAK,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM;IACzC,SAAS,MAAM,IAAI,SAAS,CAAC,oBAAoB,GAAG,EAAE,CAAC,CAAC;GACzD;EACD,OAAO,GAAG,CAAC;CACZ;;AAED,kBAAkB,GAAG,UAAU,CAAC;AAChC,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE;EAC/B,IAAI,IAAI,YAAY,UAAU,EAAE;IAC9B,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK;MACtB,OAAO,IAAI,CAAC;;MAEZ,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;GACrB;;EAED,IAAI,EAAE,IAAI,YAAY,UAAU,CAAC;IAC/B,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;EAErC,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;EACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;EAEjB,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG;IACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;IAEhB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;;EAEnD,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;CACrB;;AAED,IAAI,GAAG,GAAG,EAAE,CAAC;AACb,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,IAAI,EAAE;EAC1C,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;EAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEtB,IAAI,CAAC,CAAC;IACJ,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,IAAI,CAAC,CAAC;;EAErD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;IACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;;EAGrB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;;IAElB,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CAC9C,CAAC;;AAEF,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;EACzC,OAAO,IAAI,CAAC,KAAK,CAAC;CACnB,CAAC;;AAEF,UAAU,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,OAAO,EAAE;EAC5C,KAAK,CAAC,iBAAiB,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;EAE9C,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG;IACrB,OAAO,IAAI,CAAC;;EAEd,IAAI,OAAO,OAAO,KAAK,QAAQ;IAC7B,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;EAE5C,OAAO,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;CAC7D,CAAC;;AAEF,UAAU,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,IAAI,EAAE,KAAK,EAAE;EACtD,IAAI,EAAE,IAAI,YAAY,UAAU,CAAC,EAAE;IACjC,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAC;GACjD;;EAED,IAAI,QAAQ,CAAC;;EAEb,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;IACxB,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACxC,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GAC/C,MAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;IAC/B,QAAQ,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IACxC,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GAChD;;EAED,IAAI,uBAAuB;IACzB,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;KAC/C,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC;EACpD,IAAI,uBAAuB;IACzB,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;KAC/C,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC;EACpD,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;EAC7D,IAAI,4BAA4B;IAC9B,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI;KAChD,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC;EACrD,IAAI,0BAA0B;IAC5B,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;KACxC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;KAChD,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC;EACrD,IAAI,6BAA6B;IAC/B,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;KACxC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;KAChD,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC;;EAErD,OAAO,uBAAuB,IAAI,uBAAuB;KACtD,UAAU,IAAI,4BAA4B,CAAC;IAC5C,0BAA0B,IAAI,6BAA6B,CAAC;CAC/D,CAAC;;;AAGF,aAAa,GAAG,KAAK,CAAC;AACtB,SAAS,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE;EAC3B,IAAI,KAAK,YAAY,KAAK,EAAE;IAC1B,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;MACzB,OAAO,KAAK,CAAC;KACd,MAAM;MACL,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;KACpC;GACF;;EAED,IAAI,KAAK,YAAY,UAAU,EAAE;IAC/B,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;GACtC;;EAED,IAAI,EAAE,IAAI,YAAY,KAAK,CAAC;IAC1B,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;EAEjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;;EAGnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;EACjB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,KAAK,EAAE;IACvD,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;GACtC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;;IAE1B,OAAO,CAAC,CAAC,MAAM,CAAC;GACjB,CAAC,CAAC;;EAEH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;IACpB,MAAM,IAAI,SAAS,CAAC,wBAAwB,GAAG,KAAK,CAAC,CAAC;GACvD;;EAED,IAAI,CAAC,MAAM,EAAE,CAAC;CACf;;AAED,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW;EAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,KAAK,EAAE;IACxC,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;GAC/B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;EACrB,OAAO,IAAI,CAAC,KAAK,CAAC;CACnB,CAAC;;AAEF,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;EACpC,OAAO,IAAI,CAAC,KAAK,CAAC;CACnB,CAAC;;AAEF,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,KAAK,EAAE;EAC3C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EACvB,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;EACrB,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;EAE7B,IAAI,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;EACxD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;EACzC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;;EAE/B,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,qBAAqB,CAAC,CAAC;EACjE,KAAK,CAAC,iBAAiB,EAAE,KAAK,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;;;EAGpD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,gBAAgB,CAAC,CAAC;;;EAGvD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,gBAAgB,CAAC,CAAC;;;EAGvD,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;;;;EAKrC,IAAI,MAAM,GAAG,KAAK,GAAG,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;EAC1D,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;IAC5C,OAAO,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GACrC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;EAC1B,IAAI,IAAI,CAAC,KAAK,EAAE;;IAEd,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,IAAI,EAAE;MAC9B,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAC7B,CAAC,CAAC;GACJ;EACD,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;IAC3B,OAAO,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GACpC,CAAC,CAAC;;EAEH,OAAO,GAAG,CAAC;CACZ,CAAC;;AAEF,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE;EAClD,IAAI,EAAE,KAAK,YAAY,KAAK,CAAC,EAAE;IAC7B,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAC;GAC5C;;EAED,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,eAAe,EAAE;IAC7C,OAAO,eAAe,CAAC,KAAK,CAAC,SAAS,cAAc,EAAE;MACpD,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,gBAAgB,EAAE;QAC/C,OAAO,gBAAgB,CAAC,KAAK,CAAC,SAAS,eAAe,EAAE;UACtD,OAAO,cAAc,CAAC,UAAU,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;SAC1D,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC;;;AAGF,qBAAqB,GAAG,aAAa,CAAC;AACtC,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;EACnC,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;IACpD,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;MAC1B,OAAO,CAAC,CAAC,KAAK,CAAC;KAChB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GAChC,CAAC,CAAC;CACJ;;;;;AAKD,SAAS,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE;EACpC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;EACpB,IAAI,GAAG,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EAClC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACrB,IAAI,GAAG,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EAClC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;EACtB,IAAI,GAAG,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EACnC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;EACtB,IAAI,GAAG,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;EACjC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;EACrB,OAAO,IAAI,CAAC;CACb;;AAED,SAAS,GAAG,CAAC,EAAE,EAAE;EACf,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,GAAG,IAAI,EAAE,KAAK,GAAG,CAAC;CACtD;;;;;;;;AAQD,SAAS,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;EAClC,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;IACjD,OAAO,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GAClC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACd;;AAED,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;EACjC,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;EAC3C,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;IAC9C,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACrC,IAAI,GAAG,CAAC;;IAER,IAAI,GAAG,CAAC,CAAC,CAAC;MACR,GAAG,GAAG,EAAE,CAAC;SACN,IAAI,GAAG,CAAC,CAAC,CAAC;MACb,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;SAC3C,IAAI,GAAG,CAAC,CAAC,CAAC;;MAEb,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;SAC3D,IAAI,EAAE,EAAE;MACX,KAAK,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;MAC7B,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;QACtB,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;MAChB,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;YACjC,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;KACxC;;MAEC,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;YAC5B,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;;IAEzC,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAC3B,OAAO,GAAG,CAAC;GACZ,CAAC,CAAC;CACJ;;;;;;;;AAQD,SAAS,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;EAClC,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;IACjD,OAAO,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GAClC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACd;;AAED,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;EACjC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EAC5B,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC;EAC3C,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;IAC9C,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACrC,IAAI,GAAG,CAAC;;IAER,IAAI,GAAG,CAAC,CAAC,CAAC;MACR,GAAG,GAAG,EAAE,CAAC;SACN,IAAI,GAAG,CAAC,CAAC,CAAC;MACb,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;SAC3C,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;MACf,IAAI,CAAC,KAAK,GAAG;QACX,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;;QAE9D,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;KACzD,MAAM,IAAI,EAAE,EAAE;MACb,KAAK,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;MAC7B,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;QACtB,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;MAChB,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,IAAI,CAAC,KAAK,GAAG;UACX,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;gBACjC,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;UAE1C,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;gBACjC,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;OAC1C;QACC,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE;cACjC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;KAClC,MAAM;MACL,KAAK,CAAC,OAAO,CAAC,CAAC;MACf,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,IAAI,CAAC,KAAK,GAAG;UACX,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;gBAC5B,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;UAE1C,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;gBAC5B,IAAI,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;OAC1C;QACC,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;cAC5B,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;KAClC;;IAED,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;IAC3B,OAAO,GAAG,CAAC;GACZ,CAAC,CAAC;CACJ;;AAED,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;EACnC,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EACrC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;IAC1C,OAAO,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GACnC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACd;;AAED,SAAS,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;EAClC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;EACnB,IAAI,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;EAC7C,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;IACtD,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9C,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAChB,IAAI,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,IAAI,IAAI,GAAG,EAAE,CAAC;;IAEd,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI;MACtB,IAAI,GAAG,EAAE,CAAC;;IAEZ,IAAI,EAAE,EAAE;MACN,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,EAAE;;QAEhC,GAAG,GAAG,QAAQ,CAAC;OAChB,MAAM;;QAEL,GAAG,GAAG,GAAG,CAAC;OACX;KACF,MAAM,IAAI,IAAI,IAAI,IAAI,EAAE;;MAEvB,IAAI,EAAE;QACJ,CAAC,GAAG,CAAC,CAAC;MACR,IAAI,EAAE;QACJ,CAAC,GAAG,CAAC,CAAC;;MAER,IAAI,IAAI,KAAK,GAAG,EAAE;;;;QAIhB,IAAI,GAAG,IAAI,CAAC;QACZ,IAAI,EAAE,EAAE;UACN,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;UACX,CAAC,GAAG,CAAC,CAAC;UACN,CAAC,GAAG,CAAC,CAAC;SACP,MAAM,IAAI,EAAE,EAAE;UACb,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;UACX,CAAC,GAAG,CAAC,CAAC;SACP;OACF,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;;;QAGxB,IAAI,GAAG,GAAG,CAAC;QACX,IAAI,EAAE;UACJ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;UAEX,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;OACd;;MAED,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;KACpC,MAAM,IAAI,EAAE,EAAE;MACb,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;KAC/C,MAAM,IAAI,EAAE,EAAE;MACb,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;KAC/D;;IAED,KAAK,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;;IAE5B,OAAO,GAAG,CAAC;GACZ,CAAC,CAAC;CACJ;;;;AAID,SAAS,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;EACjC,KAAK,CAAC,cAAc,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;EAEnC,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;CAC1C;;;;;;;AAOD,SAAS,aAAa,CAAC,EAAE;uBACF,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;uBACzB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;;EAE9C,IAAI,GAAG,CAAC,EAAE,CAAC;IACT,IAAI,GAAG,EAAE,CAAC;OACP,IAAI,GAAG,CAAC,EAAE,CAAC;IACd,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC;OACvB,IAAI,GAAG,CAAC,EAAE,CAAC;IACd,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC;;IAEnC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;;EAErB,IAAI,GAAG,CAAC,EAAE,CAAC;IACT,EAAE,GAAG,EAAE,CAAC;OACL,IAAI,GAAG,CAAC,EAAE,CAAC;IACd,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;OAC3B,IAAI,GAAG,CAAC,EAAE,CAAC;IACd,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;OACpC,IAAI,GAAG;IACV,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;;IAEjD,EAAE,GAAG,IAAI,GAAG,EAAE,CAAC;;EAEjB,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,IAAI,EAAE,CAAC;CACjC;;;;AAID,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,OAAO,EAAE;EACvC,IAAI,CAAC,OAAO;IACV,OAAO,KAAK,CAAC;;EAEf,IAAI,OAAO,OAAO,KAAK,QAAQ;IAC7B,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;EAE5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxC,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC;MAC/B,OAAO,IAAI,CAAC;GACf;EACD,OAAO,KAAK,CAAC;CACd,CAAC;;AAEF,SAAS,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE;EAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACnC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;MACvB,OAAO,KAAK,CAAC;GAChB;;EAED,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE;;;;;;IAM7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACnC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;MACrB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,GAAG;QACvB,SAAS;;MAEX,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACvC,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC5B,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK;YAC/B,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK;YAC/B,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK;UACjC,OAAO,IAAI,CAAC;OACf;KACF;;;IAGD,OAAO,KAAK,CAAC;GACd;;EAED,OAAO,IAAI,CAAC;CACb;;AAED,iBAAiB,GAAG,SAAS,CAAC;AAC9B,SAAS,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;EACxC,IAAI;IACF,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;GACjC,CAAC,OAAO,EAAE,EAAE;IACX,OAAO,KAAK,CAAC;GACd;EACD,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC5B;;AAED,qBAAqB,GAAG,aAAa,CAAC;AACtC,SAAS,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;EAC7C,IAAI,GAAG,GAAG,IAAI,CAAC;EACf,IAAI,KAAK,GAAG,IAAI,CAAC;EACjB,IAAI;IACF,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;GACxC,CAAC,OAAO,EAAE,EAAE;IACX,OAAO,IAAI,CAAC;GACb;EACD,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;IAC5B,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;MACpB,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QACnC,GAAG,GAAG,CAAC,CAAC;QACR,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;OAChC;KACF;GACF,EAAC;EACF,OAAO,GAAG,CAAC;CACZ;;AAED,qBAAqB,GAAG,aAAa,CAAC;AACtC,SAAS,aAAa,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;EAC7C,IAAI,GAAG,GAAG,IAAI,CAAC;EACf,IAAI,KAAK,GAAG,IAAI,CAAC;EACjB,IAAI;IACF,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;GACxC,CAAC,OAAO,EAAE,EAAE;IACX,OAAO,IAAI,CAAC;GACb;EACD,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;IAC5B,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;MACpB,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QAClC,GAAG,GAAG,CAAC,CAAC;QACR,KAAK,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;OAChC;KACF;GACF,EAAC;EACF,OAAO,GAAG,CAAC;CACZ;;AAED,kBAAkB,GAAG,UAAU,CAAC;AAChC,SAAS,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE;EAChC,IAAI;;;IAGF,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC;GAC7C,CAAC,OAAO,EAAE,EAAE;IACX,OAAO,IAAI,CAAC;GACb;CACF;;;AAGD,WAAW,GAAG,GAAG,CAAC;AAClB,SAAS,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;EAClC,OAAO,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;CAC5C;;;AAGD,WAAW,GAAG,GAAG,CAAC;AAClB,SAAS,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;EAClC,OAAO,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;CAC5C;;AAED,eAAe,GAAG,OAAO,CAAC;AAC1B,SAAS,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;EAC5C,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EACrC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;EAEhC,IAAI,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;EACnC,QAAQ,IAAI;IACV,KAAK,GAAG;MACN,IAAI,GAAG,EAAE,CAAC;MACV,KAAK,GAAG,GAAG,CAAC;MACZ,IAAI,GAAG,EAAE,CAAC;MACV,IAAI,GAAG,GAAG,CAAC;MACX,KAAK,GAAG,IAAI,CAAC;MACb,MAAM;IACR,KAAK,GAAG;MACN,IAAI,GAAG,EAAE,CAAC;MACV,KAAK,GAAG,GAAG,CAAC;MACZ,IAAI,GAAG,EAAE,CAAC;MACV,IAAI,GAAG,GAAG,CAAC;MACX,KAAK,GAAG,IAAI,CAAC;MACb,MAAM;IACR;MACE,MAAM,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAC;GAChE;;;EAGD,IAAI,SAAS,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE;IACpC,OAAO,KAAK,CAAC;GACd;;;;;EAKD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IACzC,IAAI,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE/B,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,GAAG,GAAG,IAAI,CAAC;;IAEf,WAAW,CAAC,OAAO,CAAC,SAAS,UAAU,EAAE;MACvC,IAAI,UAAU,CAAC,MAAM,KAAK,GAAG,EAAE;QAC7B,UAAU,GAAG,IAAI,UAAU,CAAC,SAAS,EAAC;OACvC;MACD,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC;MAC1B,GAAG,GAAG,GAAG,IAAI,UAAU,CAAC;MACxB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;QAC/C,IAAI,GAAG,UAAU,CAAC;OACnB,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;QACrD,GAAG,GAAG,UAAU,CAAC;OAClB;KACF,CAAC,CAAC;;;;IAIH,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;MACrD,OAAO,KAAK,CAAC;KACd;;;;IAID,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,IAAI;QACvC,KAAK,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;MAC9B,OAAO,KAAK,CAAC;KACd,MAAM,IAAI,GAAG,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE;MAC9D,OAAO,KAAK,CAAC;KACd;GACF;EACD,OAAO,IAAI,CAAC;CACb;;AAED,kBAAkB,GAAG,UAAU,CAAC;AAChC,SAAS,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE;EAClC,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EACnC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;CACxE;;AAED,kBAAkB,GAAG,UAAU,CAAC;AAChC,SAAS,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;EACjC,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,KAAK,EAAC;EACzB,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE,EAAE,KAAK,EAAC;EACzB,OAAO,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC;CACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClwCM;IAiBL,uBAAY,EAAyC;YAAvC,cAAI,EAAE,wBAAS;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAjBM,uCAAe,GAAtB,UAAuBA,WAAkB;QACvC,OAAQ,IAAI,CAAC,SAAwB,CAAC,OAAO,CAACA,WAAQ,CAAC,IAAI,CAAC,CAAC;KAC9D;IACY,+BAAO,GAApB,UAAqB,GAAgB,EAAE,IAAW;;;gBAChD,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC;oBACrC,MAAM,IAAI,KAAK,CACb,eAAa,IAAI,CAAC,IAAI,0BAAqB,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAG,CACpE,CAAC;gBACJ,sBAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAC;;;KAC9C;IAUa,qBAAO,GAArB,UAAsB,CAAiB;QACrC,OAAO,CAAC,CAAC,GAAG,CAAC;KACd;IACa,mBAAK,GAAnB,UAAoB,CAAS;QAC3B,OAAO;YACL,GAAG,EAAE,CAAC;YACN,MAAM,EAAE,aAAa,CAAC,UAAU;SACjC,CAAC;KACH;IACH,oBAAC;CAAA;;AC1BD,iCACE,CAAiB,EACjB,GAAmB;IAEnB,IAAI,GAAG,YAAY,MAAM,EAAE;QACzB,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC;YACtC,MAAM,IAAI,KAAK,CAAC,+BAA6B,CAAC,cAAS,GAAK,CAAC,CAAC;QAChE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,OAAO,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;CACtC;AAED,yBAAyB,OAAe,EAAE,CAAgB;IAClD,IAAA,eAAK,EAAE,WAAG,EAAE,WAAG,CAAO;IAC5B,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;QAChC,OAAOC,SAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACzC;IACD,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;QAC9B,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;YAC9B,OAAOC,SAAU,CAAC,OAAO,EAAE,GAAG,CAAC,IAAIC,SAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;SAC7D;QACD,OAAOA,SAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KACjC;IACD,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;QAC9B,OAAOD,SAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;KACjC;IACD,MAAM,IAAI,KAAK,CAAC,kCAAgC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAG,CAAC,CAAC;CACtE;AAED,mBAAmB,CAA0B,EAAE,CAAe;IAC5D,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,QAAQ,GAAG,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/D,IAAI,CAAC,YAAY,MAAM,EAAE;QACvB,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QACzB,OAAO,CAAC,KAAK,GAAG,CAAC;KAClB;IACD,IAAI,CAAC,YAAY,QAAQ,EAAE;QACzB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;KACf;IACD,OAAO,eAAe,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;CACvC;AAED,yBAAyB,IAAwB;IAC/C,IACE,EAAE,IAAI,CAAC,OAAO,YAAY,MAAM,CAAC;QACjC,EAAE,IAAI,CAAC,OAAO,YAAY,QAAQ,CAAC;QACnC,OAAO,IAAI,CAAC,OAAO,KAAK,QAC1B,EAAE;QACA,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KACrB;CACF;AAEM;IAIL,qBAAY,IAAwB;QAClC,eAAe,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;KACvB;IACY,0BAAI,GAAjB,UAAkB,CAAiB;;;;gBAC7B,UAAU,GACZ,OAAO,IAAI,CAAC,YAAY,KAAK,WAAW;sBACpC,uBAAuB,CAAC,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC;sBAC7C,CAAC,CAAC;gBACR,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW;oBACrC,MAAM,IAAI,KAAK,CAAC,aAAW,IAAI,CAAC,IAAI,6BAA0B,CAAC,CAAC;gBAC9D,OAAO,GAAG,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClD,sBAAO,OAAO,EAAC;;;KAChB;IACH,kBAAC;CAAA;;AC1FD;;;;;AAKA,oBAA2B,OAAe;IACxC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjCE,kBAAI,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,MAAM,EAAE,MAAM;YAChC,IAAI,GAAG,KAAK,IAAI;gBAAE,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;;gBACvC,OAAO,CAAC,MAAM,CAAC,CAAC;SACtB,CAAC,CAAC;KACJ,CAAC,CAAC;CACJ;;ACLM;IAAkC,uCAAa;IAQpD,6BAAY,EAAwD;YAAtD,cAAI,EAAE,wBAAS,EAAE,oBAAO;QAAtC,YACE,kBAAM,EAAE,IAAI,MAAA,EAAE,SAAS,WAAA,EAAE,CAAC,SAE3B;QADC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;KACxB;IATY,mDAAqB,GAAlC;;;;;;;wBAEU,qBAAM,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAA;4BADtC,uBACE,MAAG,GAAE,CAAC,SAA8B,EAAE,IAAI,EAAE,EAC5C,SAAM,GAAE,aAAa,CAAC,UAAU,OAChC;;;;KACH;IAKH,0BAAC;CAAA,CAZwC,aAAa;;ACFtD,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,iDAAE,CAAA;IACF,2DAAO,CAAA;IACP,uDAAK,CAAA;IACL,qDAAI,CAAA;CACL,EALW,eAAe,KAAf,eAAe,QAK1B;AAMM;IACL,mBAAY,IAAsB;KAAI;IACzB,4BAAQ,GAArB;;;;gBACM,CAAC,GAAG,IAAIC,WAAO,CAAC;oBAClB,IAAI,EAAE,KAAK;oBACX,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE;iBAC3C,CAAC,CAAC;gBAEC,CAAC,GAAG,IAAI,mBAAmB,CAAC;oBAC9B,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,iBAAiB;oBAC1B,SAAS,EAAE,CAACC,UAAQ,CAAC,KAAK,EAAEA,UAAQ,CAAC,KAAK,CAAC;iBAC5C,CAAC,CAAC;gBAEC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClD,IAAI,MAAM,EAAE;oBACV,sBAAO,EAAE,MAAM,EAAE,eAAe,CAAC,EAAE,EAAE,EAAC;iBACvC;gBACD,sBAAO,EAAE,MAAM,EAAE,eAAe,CAAC,KAAK,EAAE,EAAC;;;KAC1C;IACH,gBAAC;CAAA;;ACnCD,CAAC;;;;;;oBACK,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC;oBAE1B,qBAAM,CAAC,CAAC,QAAQ,EAAE,EAAA;;oBAAlB,SAAkB,CAAC;;;;;CACpB,GAAG,CAAC"}